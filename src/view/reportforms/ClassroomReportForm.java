package view.reportforms;

import baseclasses.Classroom;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import model.ClassroomDataModel;

/**
 * This class contains all the code for the view
 */
public class ClassroomReportForm extends javax.swing.JFrame  {

    public ClassroomReportForm(ClassroomDataModel data) {

        // Initialize the form components
        initComponents();
        
        // Retrieve the list of classrooms from the data model
        ArrayList<Classroom> listOfClassrooms = data.getListOfClassrooms();

        // Call method that will add all classrooms to the text area on the form
        this.populateTextArea(listOfClassrooms);

        // Call method that will add all classrooms to the table on the form
        this.populateTable(listOfClassrooms);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOfClassrooms = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableOfClassrooms = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("List Of Classrooms At A Glance");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(275, 20, 210, 16);

        textAreaOfClassrooms.setColumns(20);
        textAreaOfClassrooms.setRows(5);
        jScrollPane1.setViewportView(textAreaOfClassrooms);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 45, 720, 124);

        jLabel2.setText("Tabular List of Classrooms");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(290, 190, 300, 16);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton);
        closeButton.setBounds(310, 380, 120, 29);

        tableOfClassrooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Room Number", "Room Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableOfClassrooms.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(tableOfClassrooms);
        tableOfClassrooms.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tableOfClassrooms.getColumnModel().getColumnCount() > 0) {
            tableOfClassrooms.getColumnModel().getColumn(0).setResizable(false);
            tableOfClassrooms.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 220, 720, 138);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
 /**
     * Private method that will add all classrooms to the text area on the form
     */
    private void populateTextArea(ArrayList<Classroom> listOfClassrooms) {

        // Initialize the string which will hold the data for the text area
        // Start with labels
        String allClassroomsText = "Room Number\tRoom Type\n";

        // Loop through the list and add the classrooms to the text area,
        // Each time adding a cr/lf between items for readibility.
        for (int i = 0; i < listOfClassrooms.size(); i++) {
            Classroom aClassroom = listOfClassrooms.get(i);
            String roomNumber = aClassroom.getRoomNumber();
            String roomType = aClassroom.getTypeOfRoom().toString();
            allClassroomsText += roomNumber;
            allClassroomsText += "\t";
            allClassroomsText += roomType;
            allClassroomsText += "\n";
        }
        // Once all the data is in the string, set the text of the text area to the string value
        textAreaOfClassrooms.setText(allClassroomsText);

    }

    /**
     * Private method that will add all classrooms to the table on the form
     */
    private void populateTable(ArrayList<Classroom> listOfClassrooms) {

        // A table model like this will hold the data for the JTable (this is the M in MVC)
        DefaultTableModel defaultTableModel = new DefaultTableModel();

        // add columns to table model
        defaultTableModel.addColumn("Room Number");
        defaultTableModel.addColumn("Room Type");

        // Link the data model to the table
        tableOfClassrooms.setModel(defaultTableModel);

        // Add the classrooms in the ArrayList to the table model
        for (Classroom aClassroom : listOfClassrooms) {

            // Create a vector that is one row in the table
            Vector aClassroomForTable = new Vector();

            // Add the data to the vector
            aClassroomForTable.add(aClassroom.getRoomNumber());
            aClassroomForTable.add(aClassroom.getTypeOfRoom());

            // Add the vector to the  data model that is connected to the JTable
            defaultTableModel.addRow(aClassroomForTable);

            tableOfClassrooms.setModel(defaultTableModel);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableOfClassrooms;
    private javax.swing.JTextArea textAreaOfClassrooms;
    // End of variables declaration//GEN-END:variables
}
