package view.reportforms;

import baseclasses.OfferedCourse;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import model.OfferedCourseDataModel;

/**
 * This class contains all the code for the view
 */
public class OfferedCourseReportForm extends javax.swing.JFrame {

    public OfferedCourseReportForm(OfferedCourseDataModel offeredCourseData) {
        // Initialize the form components
        initComponents();
        
        // Retrieve the list of faculties from the data model
        ArrayList<OfferedCourse> listOfOfferedCourse = offeredCourseData.getListOfOfferedCourse();

        // Call method that will add all faculties to the text area on the form
        this.populateTextArea(listOfOfferedCourse);

        // Call method that will add all faculties to the table on the form
        this.populateTable(listOfOfferedCourse);    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOfAvailableCourses = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableOfAvailableCourses = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("List Of Available Courses At A Glance");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(275, 20, 280, 16);

        textAreaOfAvailableCourses.setColumns(20);
        textAreaOfAvailableCourses.setRows(5);
        jScrollPane1.setViewportView(textAreaOfAvailableCourses);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 45, 720, 124);

        jLabel2.setText("Tabular List of Available Courses");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(290, 190, 300, 16);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton);
        closeButton.setBounds(310, 380, 120, 29);

        tableOfAvailableCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Number", "Course Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOfAvailableCourses.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(tableOfAvailableCourses);
        tableOfAvailableCourses.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tableOfAvailableCourses.getColumnModel().getColumnCount() > 0) {
            tableOfAvailableCourses.getColumnModel().getColumn(0).setResizable(false);
            tableOfAvailableCourses.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 220, 720, 138);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Private method that will add all offered courses to the text area on the form
     */
    private void populateTextArea(ArrayList<OfferedCourse> listOfOfferedCourse) {

        // Initialize the string which will hold the data for the text area
        // Start with labels
        String allOfferedCourseText = "Course Number\tCourse Name\n";

        // Loop through the list and add the offered courses to the text area,
        // Each time adding a cr/lf between items for readibility.
        for (int i = 0; i < listOfOfferedCourse.size(); i++) {
            OfferedCourse aOfferedCourse = listOfOfferedCourse.get(i);
            String courseId = aOfferedCourse.getCourseId();
            String courseName = aOfferedCourse.getCourseName();
            allOfferedCourseText += courseId;
            allOfferedCourseText += "\t";
            allOfferedCourseText += courseName;
            allOfferedCourseText += "\n";
        }
        // Once all the data is in the string, set the text of the text area to the string value
        textAreaOfAvailableCourses.setText(allOfferedCourseText);

    }

    /**
     * Private method that will add all offered courses to the table on the form
     */
    private void populateTable(ArrayList<OfferedCourse> listOfOfferedCourse) {

        // A table model like this will hold the data for the JTable (this is the M in MVC)
        DefaultTableModel defaultTableModel = new DefaultTableModel();

        // add columns to table model
        defaultTableModel.addColumn("Course Number");
        defaultTableModel.addColumn("Course Name");

        // Link the data model to the table
        tableOfAvailableCourses.setModel(defaultTableModel);

        // Add the offered courses in the ArrayList to the table model
        for (OfferedCourse aOfferedCourse : listOfOfferedCourse) {

            // Create a vector that is one row in the table
            Vector aOfferedCourseForTable = new Vector();

            // Add the data to the vector
            aOfferedCourseForTable.add(aOfferedCourse.getCourseId());
            aOfferedCourseForTable.add(aOfferedCourse.getCourseName());

            // Add the vector to the  data model that is connected to the JTable
            defaultTableModel.addRow(aOfferedCourseForTable);

            tableOfAvailableCourses.setModel(defaultTableModel);
        }
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableOfAvailableCourses;
    private javax.swing.JTextArea textAreaOfAvailableCourses;
    // End of variables declaration//GEN-END:variables
}
