/**
 * This class represents a report form for faculty.  It contains embedded event 
 * handlers that were generated automatically by netbeans.
 */

package view.reportforms;

import baseclasses.Faculty;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import model.FacultyDataModel;

/**
 * This class contains all the code for the view
 */
public class FacultyReportForm extends javax.swing.JFrame  {

    public FacultyReportForm(FacultyDataModel facultyData) {
        // Initialize the form components
        initComponents();
        
        // Retrieve the list of faculties from the data model
        ArrayList<Faculty> listOfFaculty = facultyData.getListOfFaculty();

        // Call method that will add all faculties to the text area on the form
        this.populateTextArea(listOfFaculty);

        // Call method that will add all faculties to the table on the form
        this.populateTable(listOfFaculty);    
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOfFaculty = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableOfFaculty = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        jLabel1.setText("List Of Faculty At A Glance");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(300, 20, 210, 16);

        textAreaOfFaculty.setColumns(20);
        textAreaOfFaculty.setRows(5);
        jScrollPane1.setViewportView(textAreaOfFaculty);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 45, 720, 124);

        jLabel2.setText("List of Faculty");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(320, 190, 270, 16);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton);
        closeButton.setBounds(160, 380, 120, 29);

        tableOfFaculty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Address", "SSN", "Status", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOfFaculty.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(tableOfFaculty);
        tableOfFaculty.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 220, 720, 138);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Private method that will add all faculties to the text area on the form
     */
    private void populateTextArea(ArrayList<Faculty> listOfFaculty) {

        // Initialize the string which will hold the data for the text area
        // Start with labels
        String allFacultyText = "Name\tAddress\tSSN\tStatus\tSalary\n";

        // Loop through the list and add the faculties to the text area,
        // Each time adding a cr/lf between items for readibility.
        for (int i = 0; i < listOfFaculty.size(); i++) {
            Faculty aFaculty = listOfFaculty.get(i);
            String name = aFaculty.getName();
            String address = aFaculty.getAddress();
            String ssn = aFaculty.getSocialSecurityNumber();
            String status = aFaculty.getStatus();
            double salary = aFaculty.getSalary();
            allFacultyText += name;
            allFacultyText += "\t";
            allFacultyText += address;
            allFacultyText += "\t";
            allFacultyText += ssn;
            allFacultyText += "\t";
            allFacultyText += status;
            allFacultyText += "\t";
            allFacultyText += salary;
            allFacultyText += "\n";
        }
        // Once all the data is in the string, set the text of the text area to the string value
        textAreaOfFaculty.setText(allFacultyText);

    }

    /**
     * Private method that will add all faculties to the table on the form
     */
    private void populateTable(ArrayList<Faculty> listOfFaculty) {

        // A table model like this will hold the data for the JTable (this is the M in MVC)
        DefaultTableModel defaultTableModel = new DefaultTableModel();

        // add columns to table model
        defaultTableModel.addColumn("Name");
        defaultTableModel.addColumn("Address");
        defaultTableModel.addColumn("SSN");
        defaultTableModel.addColumn("Status");
        defaultTableModel.addColumn("Salary");

        // Link the data model to the table
        tableOfFaculty.setModel(defaultTableModel);

        // Add the faculties in the ArrayList to the table model
        for (Faculty aFaculty : listOfFaculty) {

            // Create a vector that is one row in the table
            Vector aFacultyForTable = new Vector();

            // Add the data to the vector
            aFacultyForTable.add(aFaculty.getName());
            aFacultyForTable.add(aFaculty.getAddress());
            aFacultyForTable.add(aFaculty.getSocialSecurityNumber());
            aFacultyForTable.add(aFaculty.getStatus());
            aFacultyForTable.add(aFaculty.getSalary());

            // Add the vector to the  data model that is connected to the JTable
            defaultTableModel.addRow(aFacultyForTable);

            tableOfFaculty.setModel(defaultTableModel);
        }
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableOfFaculty;
    private javax.swing.JTextArea textAreaOfFaculty;
    // End of variables declaration//GEN-END:variables
}
